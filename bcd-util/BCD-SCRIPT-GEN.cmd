# 2>nul & perl %0 %1 > CREATE-BCD.bat || pause > nul & GOTO :EOF

# BCD-SCRIPT-GEN
# @version 2010/02/27
# @author Kenichi Maehashi

# >>> Usage <<<
# On Windows, drag & drop the config file on this script.
# The result will be stored in a file named "CREATE-BCD.bat".
# Note that you need Cygwin perl (or equivalent) to be in the PATH.
# On Unix, type `perl BCD-SCRIPT-GEN.cmd conf.pl > CREATE-BCD.bat`.

require ($ARGV[0] || die "Specify the configuration file!\n");
my $content;

$content .= << "_EOF_";
\@echo off

:: BCD File Creator for NetBoot
:: Automatically Generated by bcd-script-gen
:: Run this script as batch file under Windows Vista with the Administrative Privilege.

setlocal
set BCD_FILE=$BCD_FILE
set RAM_DEVICE={ramdiskoptions}
set GUID=
set GUID_LIST=

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Create BCD Store and add RAM Disk Options
echo --- BCD Store and RAM Disk Options
bcdedit /createstore "%BCD_FILE%" || goto FAILED_TO_CREATE
bcdedit /store "%BCD_FILE%" /create %RAM_DEVICE% /d "Ramdisk Options"
bcdedit /store "%BCD_FILE%" /deletevalue %RAM_DEVICE% description
bcdedit /store "%BCD_FILE%" /set %RAM_DEVICE% ramdisksdidevice $RAMDISK_DEVICE
bcdedit /store "%BCD_FILE%" /set %RAM_DEVICE% ramdisksdipath $RAMDISK_SDIPATH

_EOF_

foreach my $image (@IMAGES) {
	my $name = $$image{'name'};
	my $path = $$image{'path'};
	$content .= << "_EOF_";
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Add Boot Loader: $name
echo --- Boot Loader: "$name"
for /f "tokens=1-3" %%a in ('bcdedit /store "%BCD_FILE%" /create /d "$name" /application OSLOADER') do set GUID=%%$BCDEDIT_SYSTEM
bcdedit /store "%BCD_FILE%" /set %GUID% device ramdisk=[boot]$path,%RAM_DEVICE%
bcdedit /store "%BCD_FILE%" /set %GUID% osdevice ramdisk=[boot]$path,%RAM_DEVICE%
bcdedit /store "%BCD_FILE%" /set %GUID% systemroot \\Windows
bcdedit /store "%BCD_FILE%" /set %GUID% detecthal Yes
bcdedit /store "%BCD_FILE%" /set %GUID% winpe Yes
set GUID_LIST=%GUID_LIST% %GUID%

_EOF_
}

$content .= << "_EOF_";
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Add Boot Manager
echo --- Boot Manager
bcdedit /store "%BCD_FILE%" /create {bootmgr} /d "$BOOTMGR_DESCRIPTION"
bcdedit /store "%BCD_FILE%" /set {bootmgr} locale $BOOTMGR_LOCALE
bcdedit /store "%BCD_FILE%" /set {bootmgr} timeout $BOOTMGR_TIMEOUT
bcdedit /store "%BCD_FILE%" /set {bootmgr} displayorder %GUID_LIST%

echo --- Result
bcdedit /store "%BCD_FILE%" /enum

set /P N="--- Cleaning up... " < nul
del /A:H "%BCD_FILE%.LOG*"
goto SUCCESS

:SUCCESS
echo.
echo.Operation successfully completed!
echo.Your BCD file is located at:
echo.   %BCD_FILE%
goto END_PAUSE

:FAILED_TO_CREATE
echo Make sure you're running this script with administrative privilege!
goto END_PAUSE

:END_PAUSE
echo Press any key to exit the program...
pause > nul
goto :EOF

_EOF_

$content =~ s/\n/\r\n/g;
print $content;
